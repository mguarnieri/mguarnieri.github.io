[{"authors":null,"categories":null,"content":"I am an assistant professor at the IMDEA Software Institute. Before that, I completed my Ph.D. at the Institute of Information Security at ETH Zurich.\nMy research focuses on the design, analysis, and implementation of practical systems for securely storing and processing sensitive data. Recently, I have been working on building foundations and tools for reasoning about security at the hardware-software boundary, with a specific focus on microarchitectural attacks and defenses.\n","date":1675296000,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1675296000,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"I am an assistant professor at the IMDEA Software Institute. Before that, I completed my Ph.D. at the Institute of Information Security at ETH Zurich.\nMy research focuses on the design, analysis, and implementation of practical systems for securely storing and processing sensitive data.","tags":null,"title":"Marco Guarnieri","type":"authors"},{"authors":["Zilong Wang","Gideon Mohr","Klaus von Gleissenthall","Jan Reineke","Marco Guarnieri"],"categories":null,"content":"","date":1675296000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1675296000,"objectID":"21300cb5c410f3cf22cef2ca293b9986","permalink":"https://mguarnieri.github.io/publication/hwverif/","publishdate":"2023-02-02T00:00:00Z","relpermalink":"/publication/hwverif/","section":"publication","summary":"Leakage contracts have recently been proposed as a new security abstraction at the Instruction Set Architecture (ISA) level. Such contracts aim to faithfully capture the information processors may leak through side effects of their microarchitectural implementations. However, so far, we lack a verification methodology to check that a processor actually satisfies a given leakage contract.\nIn this paper, we address this problem by developing LeaVe, the first tool for verifying register-transfer-level (RTL) processor designs against ISA-level leakage contracts. To this end, we introduce a decoupling theorem that separates security and functional correctness concerns when verifying contract satisfaction. LeaVe leverages this decoupling to make verification of contract satisfaction practical. To scale to realistic processor designs LeaVe further employs inductive reasoning on relational abstractions. Using LeaVe, we precisely characterize the side-channel security guarantees provided by three open-source RISC-V processors, thereby obtaining the first contract satisfaction proofs for RTL processor designs.","tags":[],"title":"Specification and Verification of Side-channel Security for Open-source Processors via Leakage Contracts","type":"publication"},{"authors":["Oleksii Oleksenko","Marco Guarnieri","Boris Köpf","Mark Silberstein"],"categories":null,"content":"","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1672531200,"objectID":"a4cb511fb9b10ff65cbdac6ee429082b","permalink":"https://mguarnieri.github.io/publication/sp2023/","publishdate":"2023-01-01T00:00:00Z","relpermalink":"/publication/sp2023/","section":"publication","summary":"Attacks like Spectre abuse speculative execution, one of the key performance optimizations of modern CPUs. Recently, several testing tools have emerged to automatically detect speculative leaks in commercial (black-box) CPUs. However, the testing process is still slow, which has hindered in-depth testing campaigns, and so far prevented the discovery of new classes of leakage.\nIn this paper, we identify the root causes of the performance limitations in existing approaches, and propose techniques to overcome these limitations. With these techniques, we improve the testing speed over the state-of-the-art by up to two orders of magnitude.\nThese improvements enable us to run a testing campaign of unprecedented depth on Intel and AMD CPUs. As a highlight, we discover two types of previously unknown speculative leaks (affecting string comparison and division) that have escaped previous manual and automatic analyses.","tags":[],"title":"Hide and Seek with Spectres: Efficient discovery of speculative information leaks with random testing","type":"publication"},{"authors":["Xaver Fabian","Marco Patrignani","Marco Guarnieri"],"categories":null,"content":"","date":1649030400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1649030400,"objectID":"4f5b3d41a14cfce9476df3c1f72b456d","permalink":"https://mguarnieri.github.io/publication/ccs2022/","publishdate":"2022-04-04T00:00:00Z","relpermalink":"/publication/ccs2022/","section":"publication","summary":"Modern processors employ different speculation mechanisms to speculate over different kinds of instructions. Attackers can exploit these  mechanisms simultaneously in order to trigger leaks of speculatively-accessed data. Thus, sound reasoning about such speculative leaks requires accounting for all potential speculation mechanisms. Unfortunately, existing formal models only support reasoning about fixed, hard-coded speculation mechanisms, with no simple support to extend said reasoning to new mechanisms. In this paper we develop a framework for reasoning about composed speculative semantics that capture speculation due to different mechanisms and implement it as part of the Spectector verification tool. We implement novel semantics for speculating over store and return instructions and combine them with the semantics for speculating over branches. Our framework yields speculative semantics for speculating over any combination of those instructions that are secure by construction, i.e., we obtain these security guarantees for free. The implementation of our novel semantics in Spectector let us verify programs that are vulnerable to Spectre v1, Spectre v4, and Spectre v5 vulnerabilities as well as new snippets that are only vulnerable to their compositions.","tags":[],"title":"Automatic Detection of Speculative Execution Combinations","type":"publication"},{"authors":["Sankha Narayan Guria","Niki Vazou","Marco Guarnieri","James Parker"],"categories":null,"content":"","date":1640995200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1640995200,"objectID":"582c77e4fe17244407794582f0d73e95","permalink":"https://mguarnieri.github.io/publication/pldi2022/","publishdate":"2022-01-01T00:00:00Z","relpermalink":"/publication/pldi2022/","section":"publication","summary":"Non-interference is a popular way to enforce confidentiality of sensitive data. However, declassification of sensitive information is often needed in realistic applications but breaks non-interference. We present Anosy, an approximate knowledge synthesizer for quantitative declassification policies. Anosy uses refinement types to automatically construct machine checked over- and under-approximations of attacker knowledge for boolean queries on multi-integer secrets. It also provides an AnosyT monad to track the at- tacker knowledge over multiple declassification queries and checks for violations against user-specified policies in information flow control applications. We implement a prototype of Anosy and show that it is precise and permissive: up to 14 declassification queries are permitted before a policy violation occurs using the powerset of intervals domain.","tags":[],"title":"Anosy: Approximated Knowledge Synthesis with Refinement Types for Declassification","type":"publication"},{"authors":["Marco Guarnieri","Boris Köpf","Jan Reineke","Pepe Vila"],"categories":null,"content":"","date":1622851200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1622851200,"objectID":"50e347fcdbf5fafef0ef5084a70d5351","permalink":"https://mguarnieri.github.io/publication/sp2021/","publishdate":"2021-06-05T00:00:00Z","relpermalink":"/publication/sp2021/","section":"publication","summary":"Since the discovery of Spectre, a large number of hardware mechanisms for secure speculation have been proposed. Intuitively, more defensive mechanisms are less efficient but can securely execute a larger class of programs, while more permissive mechanisms may offer more performance but require more defensive programming. Unfortunately, there are no hardware-software contracts that would turn this intuition into a basis for principled co-design. In this paper, we put forward a framework for specifying such contracts, and we demonstrate its expressiveness and flexibility: On the hardware side, we use the framework to provide the first formalization and comparison of the security guarantees provided by a representative class of mechanisms for secure speculation. On the software side, we use the framework to characterize program properties that guarantee secure co-design in two scenarios  traditionally investigated in isolation: (1) ensuring that a benign program does not leak information while computing on confidential data, and (2) ensuring that a potentially malicious program cannot read outside of its designated sandbox. Finally, we show how the properties corresponding to both scenarios can be checked based on existing tools for software verification, and we use them to validate our findings on executable code.","tags":[],"title":"Hardware-Software Contracts for Secure Speculation","type":"publication"},{"authors":["Marco Patrignani","Marco Guarnieri"],"categories":null,"content":"","date":1617494400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1617494400,"objectID":"2dedec33af82ede99a1cb9895d6062b3","permalink":"https://mguarnieri.github.io/publication/ccs2021/","publishdate":"2021-04-04T00:00:00Z","relpermalink":"/publication/ccs2021/","section":"publication","summary":"Attackers can access sensitive information of programs by exploiting the side-effects of speculatively-executed instructions using Spectre attacks. To mitigate these attacks, popular compilers deployed a wide range of countermeasures whose security, however, has not been ascertained: while some are believed to be secure, others are known to be insecure and result in vulnerable programs. This paper develops formal foundations for reasoning about the security of these defenses. For this, it proposes a framework of secure compilation criteria that characterise when compilers produce code resistant against Spectre v1 attacks. With this framework, this paper performs a comprehensive security analysis of countermeasures against Spectre v1 attacks implemented in major compilers, deriving the first security proofs of said countermeasures.","tags":[],"title":"Exorcising Spectres with Secure Compilers","type":"publication"},{"authors":["Marco Guarnieri","Marco Patrignani"],"categories":null,"content":"","date":1614729600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1614729600,"objectID":"04195cb79eb6480a24a46169dea9d806","permalink":"https://mguarnieri.github.io/publication/casco/","publishdate":"2021-03-03T00:00:00Z","relpermalink":"/publication/casco/","section":"publication","summary":"Attackers can access sensitive information of programs by exploiting the side-effects of speculatively-executed instructions using Spectre attacks. To mitigate theses attacks, popular compilers deployed a wide range of countermeasures whose security, however, has not been ascertained. While some are believed to be secure, others are known to be insecure and result in vulnerable programs. To reason about the security guarantees of these compiler countermeasures, this paper presents a framework comprising secure compilation criteria characterizing when compilers produce code resistant against Spectre attacks. With this framework, we perform a comprehensive security analysis of compiler countermeasures against Spectre attacks implemented in major compilers. This work provides sound foundations to formally reason about the security of compiler countermeasures against Spectre attacks as well as the first proofs of security and insecurity of said countermeasures.","tags":[],"title":"Contract-aware Secure Compilation","type":"publication"},{"authors":["Enrico Bacis","Dario Facchinetti","Marco Guarnieri","Marco Rosa","Matthew Rossi","Stefano Paraboschi"],"categories":null,"content":"","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"d576571627662d779878696c1bdee79d","permalink":"https://mguarnieri.github.io/publication/ares2021/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/publication/ares2021/","section":"publication","summary":"A Time-Lock enables the release of a secret at a future point in time. Many approaches implement Time-Locks as cryptographic puzzles, binding the recovery of the secret to the solution of the puzzle. Since the time required to find the puzzle’s solution may vary due to a multitude of factors, including the computational effort spent, these solutions may not suit all scenarios. To overcome this limitation, we propose I Told You Tomorrow (ITYT), a novel way of implementing time-locked secrets based on smart contracts. ITYT relies on the blockchain to measure the elapse of time, and it combines threshold cryptography with economic incentives and penalties to replace cryptographic puzzles. We implement a prototype of ITYT on top of the Ethereum blockchain. The prototype leverages secure Multi-Party Computation to avoid any single point of trust. We also analyze resiliency to attacks with the help of economic game theory, in the context of rational adversaries. The experiments demonstrate the low cost and limited resource consumption associated with our approach.","tags":[],"title":"I Told You Tomorrow: Practical Time-Locked Secrets using Smart Contracts","type":"publication"},{"authors":null,"categories":null,"content":"Speculative execution attacks, such as the recent Spectre attacks, are a recent class of security threats that affect almost all modern processors (that is, millions of IT systems). These attacks exploit the hardware side-effects of a CPU optimization called speculative execution to break fundamental security assumptions on how programs are executed and to leak sensitive information.\nHardware/software co-design is an essential principle for building practical systems that are secure against these attacks. Following this principle, hardware and software should collaborate to thwart speculative execution attacks. Hardware platforms should provide precise security guarantees and expose control on the internal microarchitectural state. Software, instead, should leverage these guarantees to achieve end-to-end security. Unfortunately, we currently lack foundations, guiding principles, and tools for co-design for security.\nGoals This project will develop foundations, models, and tools for enabling co-design for secure speculation. The project will revolve around the notion of hardware/software security contract, an abstraction enabling the distribution of security obligations between hardware and software. The project will provide developers with languages for specifying security contracts as well as techniques for automatically determining whether proposals for secure speculation effectively prevent speculative execution attacks.\n","date":1607731200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607731200,"objectID":"ec1562226179124eabe957de8bf8d668","permalink":"https://mguarnieri.github.io/project/hwsw-codesign/","publishdate":"2020-12-12T00:00:00Z","relpermalink":"/project/hwsw-codesign/","section":"project","summary":"Speculative execution attacks, such as the recent Spectre attacks, are a recent class of security threats that affect almost all modern processors (that is, millions of IT systems). These attacks exploit the hardware side-effects of a CPU optimization called speculative execution to break fundamental security assumptions on how programs are executed and to leak sensitive information.","tags":["Security","Micro-architectural attacks"],"title":"Hardware/software co-design for secure speculation","type":"project"},{"authors":["Marco Guarnieri","Boris Köpf","José F. Morales","Jan Reineke","Andrés Sánchez"],"categories":null,"content":"","date":1602288000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1602288000,"objectID":"d72fb62c7868d881e46e2830fbacdc92","permalink":"https://mguarnieri.github.io/publication/sp2020/","publishdate":"2020-10-10T00:00:00Z","relpermalink":"/publication/sp2020/","section":"publication","summary":"Since the advent of SPECTRE, a number of countermeasures have been proposed and deployed. Rigorously reasoning about their effectiveness, however, requires a well-defined notion of security against speculative execution attacks, which has been missing until now. We present a novel, principled approach for reasoning about software defenses against SPECTRE-style attacks. Our approach builds on speculative non-interference, the first semantic notion of security against speculative execution attacks. We develop SPECTECTOR, an algorithm based on symbolic execution for automatically proving speculative non-interference, or detecting violations. We implement SPECTECTOR in a tool, and we use it to detect subtle leaks -- and optimizations opportunities -- in the way major compilers place SPECTRE countermeasures.","tags":[],"title":"SPECTECTOR: Principled detection of speculative information flows","type":"publication"},{"authors":["Pepe Vila","Pierre Ganty","Marco Guarnieri","Boris Köpf"],"categories":null,"content":"","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577836800,"objectID":"c8badec1506914c3355a6b0cc2fa1c03","permalink":"https://mguarnieri.github.io/publication/pldi2020/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/pldi2020/","section":"publication","summary":"We show how to infer deterministic cache replacement policies using off-the-shelf automata learning and program synthesis techniques. For this, we construct and chain two abstractions that expose the cache replacement policy of any set in the cache hierarchy as a membership oracle to the learning algorithm, based on timing measurements on a silicon CPU. Our experiments demonstrate an advantage in scope and scalability over prior art and uncover 2 previously undocumented cache replacement policies.","tags":[],"title":"CacheQuery: Learning Replacement Policies from Hardware Caches","type":"publication"},{"authors":["Pepe Vila","Andreas Abel","Marco Guarnieri","Boris Köpf","Jan Reineke"],"categories":null,"content":"","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577836800,"objectID":"86cd2a0938b7c9f74de2468db8b30898","permalink":"https://mguarnieri.github.io/publication/flushgeist/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/flushgeist/","section":"publication","summary":"Flushing the cache, using instructions like clflush and wbinvd, is commonly proposed as a countermeasure against access-based cache attacks. In this report, we show that several Intel caches, specifically the L1 caches in some pre-Skylake processors and the L2 caches in some post-Broadwell processors, leak information even after being flushed through clflush and wbinvd instructions. That is, security-critical assumptions about the behavior of clflush and wbinvd instructions are incorrect, and countermeasures that rely on them should be revised.","tags":[],"title":"Flushgeist: Cache Leaks from Beyond the Flush","type":"publication"},{"authors":["Marco Guarnieri","Musard Balliu","Daniel Schoepe","David Basin","Andrei Sabelfeld"],"categories":null,"content":"","date":1546300800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1546300800,"objectID":"c059803edb195290a0fedc0af5430725","permalink":"https://mguarnieri.github.io/publication/eurosp2019/","publishdate":"2019-01-01T00:00:00Z","relpermalink":"/publication/eurosp2019/","section":"publication","summary":"Securing database-backed applications requires tracking information across the program and the database together, since securing each component in isolation may still result in an overall insecure system. Current research extends language-based techniques with models capturing the database's behavior. Previous work, however, relies on simplistic database models, which ignore security-relevant  features that may  leak sensitive information. We propose a novel security monitor for database-backed applications. The monitor  tracks fine-grained dependencies between variables and database tuples by leveraging database theory concepts like disclosure lattices and query determinacy. It also accounts for a realistic database model that supports security-critical constructs like triggers and dynamic policies. The monitor automatically synthesizes program-level code that replicates the behavior of database  features like triggers, thereby tracking information flows inside the database. We also introduce symbolic tuples, an efficient approximation of dependency-tracking over disclosure lattices. We implement the monitor for Scala programs and demonstrate its effectiveness on four case studies.","tags":[],"title":"Information-Flow Control for Database-backed Applications","type":"publication"},{"authors":null,"categories":null,"content":"Speculative execution attacks, like the recent Spectre attacks, exploit the persistent microarchitectural side-effects of speculatively executed instructions. These attacks affect all modern general-purpose CPUs and pose a serious threat against platforms with multiple tenants. However, we still lack a precise characterization of security against speculative execution attacks. Such a characterization is a prerequisite for reasoning about the effectiveness and security of countermeasures.\nGoals This project’s goals are (1) building the theoretical foundations for reasoning about speculative execution attacks, (2) developing techniques for detecting speculative leaks (or prove their absence), and (3) analyzing the security of (hardware and software) Spectre’s countermeasures.\n","date":1544572800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1544572800,"objectID":"8f1c51f50f9607961adeb70d236d9a9c","permalink":"https://mguarnieri.github.io/project/speculative-execution/","publishdate":"2018-12-12T00:00:00Z","relpermalink":"/project/speculative-execution/","section":"project","summary":"Speculative execution attacks, like the recent Spectre attacks, exploit the persistent microarchitectural side-effects of speculatively executed instructions. These attacks affect all modern general-purpose CPUs and pose a serious threat against platforms with multiple tenants.","tags":["Security","Micro-architectural attacks"],"title":"Reasoning about speculative execution attacks","type":"project"},{"authors":null,"categories":null,"content":"Understanding the timing behavior of modern CPUs is crucial for optimizing code and for ensuring timing-related security and safety properties. Unfortunately, the timing behavior of today’s high-performance processors depends on subtle and poorly documented details of their micro-architecture, which has triggered laborious efforts from researchers to build models of different components.\nGoals This project aims at constructing techniques and tools for automatically inferring and learning high-level models of micro-architectural components (like caches and prefetchers) directly from timing measurements.\n","date":1541894400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541894400,"objectID":"c9dd93570981738ccb88c5aa871f2d09","permalink":"https://mguarnieri.github.io/project/learning-uarch-models/","publishdate":"2018-11-11T00:00:00Z","relpermalink":"/project/learning-uarch-models/","section":"project","summary":"Understanding the timing behavior of modern CPUs is crucial for optimizing code and for ensuring timing-related security and safety properties. Unfortunately, the timing behavior of today’s high-performance processors depends on subtle and poorly documented details of their micro-architecture, which has triggered laborious efforts from researchers to build models of different components.","tags":["Security","Micro-architectural attacks"],"title":"Automatically learning micro-architectural models","type":"project"},{"authors":["Martin Kucera","Petar Tsankov","Timon Gehr","Marco Guarnieri","Martin Vechev"],"categories":null,"content":"","date":1488499200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1488499200,"objectID":"3f343ec1b9d86d9476ed6ed93f3bb1cf","permalink":"https://mguarnieri.github.io/publication/ccs2017/","publishdate":"2017-03-03T00:00:00Z","relpermalink":"/publication/ccs2017/","section":"publication","summary":"Existing probabilistic privacy enforcement approaches permit the execution of a program that processes sensitive data only if the information it leaks is within the bounds specified by a given policy. Thus, to extract any information, users must manually design a program that satisfies the policy. In this work, we present a novel synthesis approach that automatically transforms a program into one that complies with a given policy. Our approach consists of two ingredients. First, we phrase the problem of determining the amount of leaked information as Bayesian inference, which enables us to leverage existing probabilistic programming engines. Second, we present two synthesis procedures that add uncertainty to the program’s outputs as a way of reducing the amount of leaked information: an optimal one based on SMT solving and a greedy one with quadratic running time. We implemented and evaluated our approach on 10 representative programs from multiple application domains. We show that our system can successfully synthesize a permissive enforcement mechanism for all examples.","tags":[],"title":"Synthesis of Probabilistic Privacy Enforcement","type":"publication"},{"authors":["Marco Guarnieri"],"categories":null,"content":"","date":1485993600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1485993600,"objectID":"1a0d495537dfaebb4468e692cfa46898","permalink":"https://mguarnieri.github.io/publication/phdthesis/","publishdate":"2017-02-02T00:00:00Z","relpermalink":"/publication/phdthesis/","section":"publication","summary":"Databases often store and manage sensitive data. Regulating the access to databases is, therefore, essential. To this end, database security researchers have developed both *access control* and *inference control* mechanisms. The former limit direct access to sensitive data, whereas the latter prevent leaks caused by combining query results with external information such as prior knowledge or data dependencies. Ideally, all these mechanisms should come with security proofs clearly stating what attacks they are designed to thwart, as with security mechanisms in other domains. Unfortunately, this is far from reality. Existing protection mechanisms are implemented in an ad hoc fashion, with neither precise security guarantees nor the means to verify them. This has immediate consequences as existing mechanisms are inadequate to secure modern databases and are susceptible to attacks. In this thesis, we develop theoretical foundations for access and inference control in databases. We leverage these foundations to design *provably secure* and *practical* protection mechanisms for modern database systems.","tags":[],"title":"Formal Foundations for Access and Inference Control in Databases","type":"publication"},{"authors":["Marco Guarnieri","Srdjan Marinovic","David Basin"],"categories":null,"content":"","date":1485993600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1485993600,"objectID":"7750f28dc1aa7bd92f920922de6bc57c","permalink":"https://mguarnieri.github.io/publication/csf2017/","publishdate":"2017-02-02T00:00:00Z","relpermalink":"/publication/csf2017/","section":"publication","summary":"Databases can leak confidential information when users combine query results with probabilistic data dependencies and prior knowledge. Current research efforts offer mechanisms that either handle a limited class of dependencies or lack tractable enforcement algorithms necessary for scaling. We propose a foundation for Database Inference Control based on PROBLOG, a probabilistic logic programming language. We leverage this foundation to develop ANGERONA, a provably secure enforcement mechanism that prevents information leakage in the presence of probabilistic dependencies. We then provide a tractable inference algorithm for a practically relevant fragment of PROBLOG. We empirically evaluate ANGERONA's performance showing that it scales to relevant problems of interest.","tags":[],"title":"Securing Databases from Probabilistic Inference","type":"publication"},{"authors":["Marco Guarnieri","Petar Tsankov","Tristan Buchs","Mohammad Torabi Dashti","David Basin"],"categories":null,"content":"","date":1483228800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1483228800,"objectID":"8e9b8a7a8476382a40583c26aa5e529a","permalink":"https://mguarnieri.github.io/publication/issta2017/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/issta2017/","section":"publication","summary":"Test isolation is a prerequisite for the correct execution of test suites on web applications. We present Test Execution Checkpointing, a method for efficient test isolation. Our method instruments web applications to support checkpointing and exploits this support to isolate and optimize tests. We have implemented and evaluated this method on five popular PHP web applications. The results show that our method not only provides test isolation essentially for free, it also reduces testing time by 44% on average.","tags":[],"title":"Test Execution Checkpointing for Web Applications","type":"publication"},{"authors":null,"categories":null,"content":"Databases often store and manage sensitive data. Regulating the access to databases is, therefore, essential. To this end, researchers have developed both access control and inference control mechanisms. Ideally, all these mechanisms should come with security proofs clearly stating what attacks they are designed to thwart, as with security mechanisms in other domains. Unfortunately, this is far from reality. Existing mechanisms are implemented in an ad hoc fashion, with neither precise security guarantees nor the means to verify them. This has immediate consequences as existing mechanisms are inadequate to secure modern databases and are susceptible to attacks.\nGoals This project’s goals are (1) research and develop solid theoretical foundations for access and inference control in modern database systems, and (2) leverage these foundations to design security mechanisms that are provably secure. More strongly, we argue that all database security mechanisms must offer security proofs to clearly state what attacks and attackers they are designed to thwart.\nOur approach is to formally define realistic attacker models and adequate security properties, complemented by a formal operational semantics of databases as a basis for the security proofs, and develop enforcement mechanisms and prove their security. As a result, the resulting mechanisms will provide precise security guarantees and provably prevent attacks.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"585051df2a7c6acee3ee58eec2958d68","permalink":"https://mguarnieri.github.io/project/dbac-foundations/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/dbac-foundations/","section":"project","summary":"Databases often store and manage sensitive data. Regulating the access to databases is, therefore, essential. To this end, researchers have developed both access control and inference control mechanisms. Ideally, all these mechanisms should come with security proofs clearly stating what attacks they are designed to thwart, as with security mechanisms in other domains.","tags":["Databases","Security","Access Control","Inference Control"],"title":"Provably secure access and inference control in databases","type":"project"},{"authors":["Marco Guarnieri","Srdjan Marinovic","David Basin"],"categories":null,"content":"","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1451606400,"objectID":"2fb4a98fe8ebcb0115a346a1f1896104","permalink":"https://mguarnieri.github.io/publication/eurosp2016/","publishdate":"2016-01-01T00:00:00Z","relpermalink":"/publication/eurosp2016/","section":"publication","summary":"Existing SQL access control mechanisms are extremely limited. Attackers can leak information and escalate their privileges using advanced database features such as views, triggers, and integrity constraints. This is not merely a problem of vendors lagging behind the state-of-the-art. The theoretical foundations for database security lack adequate security definitions and a realistic attacker model, both of which are needed to evaluate the security of modern databases. We address these issues and present a provably secure access control mechanism that prevents attacks that defeat popular SQL database systems.","tags":[],"title":"Strong and Provably Secure Database Access Control","type":"publication"},{"authors":["Marco Guarnieri","David Basin"],"categories":null,"content":"","date":1401926400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1401926400,"objectID":"8124d085767d19d92ac28aaa662d386a","permalink":"https://mguarnieri.github.io/publication/vldb2014/","publishdate":"2014-06-05T00:00:00Z","relpermalink":"/publication/vldb2014/","section":"publication","summary":"Security-Aware Query Processing is the problem of computing answers to queries in the presence of access control policies. We present general impossibility results for the existence of optimal algorithms for Security-Aware Query Processing and classify query languages for which such algorithms exist. In particular, we show that for the relational calculus there are no optimal algorithms, whereas optimal algorithms exist for some of its fragments, such as the existential fragment. We also establish relationships between two different models of Fine-Grained Access Control, called Truman and Non-Truman models, which have been previously presented in the literature as distinct. For optimal Security-Aware Query Processing, we show that the Non-Truman model is a special case of the Truman model for boolean queries in the relational calculus, whereas the two models coincide for more powerful languages, such as the relational calculus with aggregation operators. In contrast, these two models are distinct for non-boolean queries.","tags":[],"title":"Optimal Security-Aware Query Processing","type":"publication"},{"authors":["Mario Arrigoni Neri","Marco Guarnieri","Eros Magri","Simone Mutti","Stefano Paraboschi"],"categories":null,"content":"","date":1381363200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1381363200,"objectID":"3dfe520b3fefb0ec979caf2b3542cabe","permalink":"https://mguarnieri.github.io/publication/secrypt2013/","publishdate":"2013-10-10T00:00:00Z","relpermalink":"/publication/secrypt2013/","section":"publication","summary":"Current IT systems consist usually of several components and services that communicate and exchange data over the Internet. They have security requirements that aim at avoiding information disclosure and at showing compliance with government regulations. In order to effectively handle the security management of complex IT systems, techniques are needed to help the security administrator in the design and configuration of the security architecture. We propose a model-driven security approach for the design and generation of concrete security configurations for software architectures. In our approach the system architect models the architecture of the system by means of UML class diagrams, and then the security administrator adds security requirements to the model by means of Security4UML, a UML profile. From the model enriched with security requirements, the concrete security configuration is derived in a semi-automated way. We present a tool that supports this model-driven approach, and a case study that involves a distributed multi-user meeting scheduler application.","tags":[],"title":"A Model-Driven Approach for Securing Software Architectures","type":"publication"},{"authors":["Marco Guarnieri","Mario Arrigoni Neri","Eros Magri","Simone Mutti"],"categories":null,"content":"","date":1378684800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1378684800,"objectID":"9c2bd207dfa081a0ec8f33b0f673c08e","permalink":"https://mguarnieri.github.io/publication/sacmat2013/","publishdate":"2013-09-09T00:00:00Z","relpermalink":"/publication/sacmat2013/","section":"publication","summary":"The evolution of information systems sees an increasing need of flexible and sophisticated approaches for the automated detection of anomalies in security policies. One of these anomalies is redundancy, which may increase the total cost of management of the policies and may reduce the performance of access control mechanisms and of other anomaly detection techniques. We consider three approaches that can remove redundancy from access control policies, progressively reducing the number of authorizations in the policy itself. We show that several problems associated with redundancy are NP-hard. We propose exact solutions to two of these problems, namely the Minimum Policy Problem, which consists in computing the minimum policy that represents the behaviour of the system, and the Minimum Irreducible Policy Problem, consisting in computing the redundancy-free version of a policy with the smallest number of authorizations. Furthermore we propose heuristic solutions to those problems. We also present a comparison between the exact and heuristics solutions based on experiments that use policies derived from bibliographical databases.","tags":[],"title":"On the Notion of Redundancy in Access Control Policies","type":"publication"},{"authors":["Angelo Gargantini","Marco Guarnieri","Eros Magri"],"categories":null,"content":"","date":1375920000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1375920000,"objectID":"ff3c9b222b91be30be7a29889f0b3153","permalink":"https://mguarnieri.github.io/publication/icst2013/","publishdate":"2013-08-08T00:00:00Z","relpermalink":"/publication/icst2013/","section":"publication","summary":"Code coverage is usually used as a measurement of testing quality and as adequacy criterion. Unfortunately, code coverage is very sensitive to modifications of the code structure, and, therefore, we can achieve the same degree of coverage with different testing effort by writing the same program in syntactically different ways. For this reason, code coverage can provide the tester with misleading information. In order to understand how a testing criterion is affected by code structure modifications, we have introduced a way to measure the sensitivity of coverage to code changes by means of code-to-code transformations. However the manual execution of the robustness analysis is tedious, time consuming and error prone. In order to solve these issues we present AURORA, a tool that automates the robustness analysis process and leverages the capabilities offered from several existing tools. AURORA has an extendible architecture that concretely supports the tester in the execution of the robustness analysis. Due to this extendible architecture, each user can personalize the robustness analysis to his/her needs. AURORA allows the user to add new transformations by using TXL, which is a programming language specifically designed to support source transformation tasks. It performs the coverage evaluation by using existing code coverage tools and is based on the use of the JUnit framework.","tags":[],"title":"AURORA: AUtomatic RObustness coveRage Analysis Tool","type":"publication"},{"authors":["Mario Arrigoni Neri","Marco Guarnieri","Eros Magri","Simone Mutti","Stefano Paraboschi"],"categories":null,"content":"","date":1349827200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1349827200,"objectID":"0d24eb706862bf0156f8c31c056d2a26","permalink":"https://mguarnieri.github.io/publication/estel2012/","publishdate":"2012-10-10T00:00:00Z","relpermalink":"/publication/estel2012/","section":"publication","summary":"The design of efficient and effective techniques for security policy analysis is a crucial open problem in modern information systems. Significant attention has been dedicated in the past to the use of logical tools for the analysis of security policies, but this work has produced a limited impact on enterprise information systems. Important reasons of the limited success of past research were the difficult integration of these approaches with the technological scenario and the limited scalability of many proposals. Nowadays Semantic Web tools are increasingly used in modern information systems. We show how the tools provided by Semantic Web and ontology management technologies offer an adequate basis for the realization of techniques able to support conflict analysis in security policies. Based on the use of these techniques, we propose a solution for two different variants of conflict analysis: (a) Policy Incompatibility, and (b) Separation of Duty Satisfiability. Experiments that test the techniques on large security policies demonstrate the scalability of the approach.","tags":[],"title":"Conflict Detection in Security Policies using Semantic Web Technology","type":"publication"},{"authors":["Gabriel Serme","Anderson Santana De Oliveira","Marco Guarnieri","Paul El Khoury"],"categories":null,"content":"","date":1349827200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1349827200,"objectID":"ae357420bc45afe020728632301f02ca","permalink":"https://mguarnieri.github.io/publication/securware2012/","publishdate":"2012-10-10T00:00:00Z","relpermalink":"/publication/securware2012/","section":"publication","summary":"Security vulnerabilities are still prevalent in systems despite the existence of their countermeasures for several decades. In order to detect the security vulnerabilities missed by developers, complex solutions are undertaken like static analysis, often after the development phase and with a loss of context. Although vulnerabilities are found, there is also an absence of systematic protection against them. In this paper, we introduce an integrated Eclipse plug-in to assist developers in the detection and mitigation of security vulnerabilities using Aspect-Oriented Programming early in the development life-cycle. The work is a combination of static analysis and protection code generation during the development phase. We leverage the developer interaction with the integrated tool to obtain more knowledge about the system, and to report back a better overview of the different security aspects already applied. We also discuss challenges for such code correction approach.","tags":[],"title":"Towards Assisted Remediation of Security Vulnerabilities","type":"publication"},{"authors":["Marco Guarnieri","Eros Magri","Simone Mutti"],"categories":null,"content":"","date":1347148800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1347148800,"objectID":"f217cf6f8f4686796ac409bc7b31085d","permalink":"https://mguarnieri.github.io/publication/eclipseit2012/","publishdate":"2012-09-09T00:00:00Z","relpermalink":"/publication/eclipseit2012/","section":"publication","summary":"The design of efficient and effective techniques for security policy analysis and management is a crucial open problem in modern information systems. The increasing complexity of current IT systems requires new techniques for designing access control policies. Thus, in order to ease the definition and management of access control policies, a tool chain that lets developers defining and managing security policies is needed. This tool chain can be used to support a model-driven approach to the definition and implementation of access control policies, in which the policies are refined in several steps in order to produce concrete security configurations. In this paper we present an extension of the PoSecCo Eclipse Policy Plug-in (PEPP), which provides to the users three different reasoning services for detecting anomalies in security policies. The reasoning services are based on Semantic Web and ontology management technologies, which offer an adequate basis for the realization of techniques able to support conflict analysis in security policies. The three services are: (a) Policy Incompatibility, (b) Redundancy Detection, and (c) Separation of Duty Conflicts Detection.","tags":[],"title":"Automated Management and Analysis of Security Policies using Eclipse","type":"publication"},{"authors":["Francesco Bolis","Angelo Gargantini","Marco Guarnieri","Eros Magri"],"categories":null,"content":"","date":1338854400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1338854400,"objectID":"a8f765922519c8e2945d6e000f32bda0","permalink":"https://mguarnieri.github.io/publication/ssbse2012/","publishdate":"2012-06-05T00:00:00Z","relpermalink":"/publication/ssbse2012/","section":"publication","summary":"One of the current core requirements of web applications is the continuity of the service, because loss in availability can lead to severe economic losses. This is the main reason behind the growing interest in web application testing that offers to researchers several challenges, due to the peculiar nature of these applications. Several classical testing techniques have been extended to deal with web testing. In this paper we propose to extend to web application testing a recent search-based approach that optimizes the generation of the whole test suite. This approach has several advantages over common approaches that optimize the generation of a single test case at a time. We show the technological challenges we have had to face, the architecture of the tool WETT we have developed, and some preliminary results of the experiments.","tags":[],"title":"Evolutionary Testing of PHP Web Applications with WETT","type":"publication"},{"authors":["Marco Guarnieri","Eros Magri","Davide Brugali","Luca Gherardi"],"categories":null,"content":"","date":1325376000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1325376000,"objectID":"d2afb1153dc51ab347a1f6e2f2088dd6","permalink":"https://mguarnieri.github.io/publication/robotica2012/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/robotica2012/","section":"publication","summary":"Kinematics and dynamics constraints of mobile robots can be modeled by means of differential equations. Simulation and sampling based path-planning algorithms need a model of these constraints in order to deal with non-holonomic mobile robots. Usually these models are hard-coded in the implementation of those algorithms and this makes hard their reuse. In order to design these algorithms in a modular and extensible way we have to explicitly represent the models of the robots and decouple them from algorithms implementation. We propose DCML, a Domain Specific Language that can be used in order to describe differential models, and a tool that allows developers to automatically generate the code that implements the model. We also aim to show how this Model- Driven Engineering technique can be used with good results. As a demonstration of what can be done by means of our DSL, we present the differential model of an omnidirectional holonomic robot called BART, and we show how this model can be integrated in a framework for path planning.","tags":[],"title":"A Domain Specific Language for Modeling Differential Constraints of Mobile Robots","type":"publication"},{"authors":["Angelo Gargantini","Marco Guarnieri","Eros Magri"],"categories":null,"content":"","date":1325376000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1325376000,"objectID":"ff3f83d75db0ef5ec1d560f91d31df5e","permalink":"https://mguarnieri.github.io/publication/ictss2012/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/ictss2012/","section":"publication","summary":"Code coverage is usually used as a measurement of testing quality and as adequacy criterion. Unfortunately, code coverage is very sensitive to modifications of the code structure, and, therefore, the same test suite can achieve different degrees of coverage on the same program written in two syntactically different ways. For this reason, code coverage can provide the tester with misleading information. In order to understand how a testing criterion is affected by code structure modifications, we introduce a way to measure the sensitivity of coverage to code changes. We formalize the modifications of the code structure using semantic preserving code-to-code transformations and we propose a framework to evaluate coverage robustness to these transformations, extending actual existing coverage criteria. This allows us to define which programs and which test suites can be considered robust with respect to a certain set of transformations. We can identify when the obtained coverage is fragile and we extend the concept of coverage criterion by introducing an index that measures the fragility of the coverage of a given test suite. We show how to compute the fragility index and we evidence that also well-written industrial code and realistic test suites can be fragile. Moreover, we suggest how to deal with this kind of testing fragility.","tags":[],"title":"Extending Coverage Criteria by Evaluating their Robustness to Code Structure Changes","type":"publication"},{"authors":["Francesco Bolis","Angelo Gargantini","Marco Guarnieri","Eros Magri","Lorenzo Musto"],"categories":null,"content":"","date":1325376000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1325376000,"objectID":"900d85628eb840fc7579bb748056000c","permalink":"https://mguarnieri.github.io/publication/mdwe2012/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/mdwe2012/","section":"publication","summary":"The increasing diffusion and importance of Web Applications has led to strict requirements in terms of continuity of the service, because their unavailability can lead to severe economic losses. Techniques to assure the quality of these applications are thus needed in order to identify in advance possible faults. Model-driven approaches to the testing of Web Applications can provide developers with a way of checking the conformance of the actual Web Application with respect to the model built from the requirements. These approaches can be used to automatically generate from the model a set of test cases satisfying certain coverage criteria, and thus can be integrated in a classical test driven development process. In this paper we present an automated technique for Web Application testing using a model-driven approach. We present a way of modeling Web Applications by Abstract State Machines (ASMs), and a process for generating automatically from the model a concrete test suite that is executed on the Web Application under test in order to check the conformance between the application and the model.","tags":[],"title":"Model-Driven Testing for Web Applications using Abstract State Machines","type":"publication"},{"authors":["Angelo Gargantini","Marco Guarnieri","Eros Magri"],"categories":null,"content":"","date":1315526400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1315526400,"objectID":"638918fc911719ec7cc61d1e043a5bbc","permalink":"https://mguarnieri.github.io/publication/eclipseit2011fsm/","publishdate":"2011-09-09T00:00:00Z","relpermalink":"/publication/eclipseit2011fsm/","section":"publication","summary":"Finite state machines (FSMs) represent a very simple yet widely used formalism. They are used to model simple protocols or even complex systems in an abstract way. Java classes often behave like FSMs. For these reasons, FSMs are often used in conformance testing, which consists in checking that a real implementation conforms with its specification given in terms of a FSM. In this paper, we show how Eclipse- related technologies, like GMF and PDE, can be used to build an editor and test generator for FSMs. We present a complete environment which contains: (1) a graphical editor based on a meta-model for FSMs, (2) an extensible framework for test generation from FSMs according to several coverage criteria, and (3) an API that can be used to test Java classes against their specifications given as FSMs.","tags":[],"title":"An Eclipse based environment for conformance testing by FSMs","type":"publication"},{"authors":["Marco Guarnieri","Paul el Khoury","Gabriel Serme"],"categories":null,"content":"","date":1312761600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1312761600,"objectID":"50e598a46c001455267525a4b22f8271","permalink":"https://mguarnieri.github.io/publication/eclipseit2011static/","publishdate":"2011-08-08T00:00:00Z","relpermalink":"/publication/eclipseit2011static/","section":"publication","summary":"After a decade of existence, still, Cross-site scripting, SQL Injection and other of Input validation associated security vulnerabilities can cause severe damage once exploited. To analyze this fact, [14] conducted an empirical study, while OWASP and SANS defined their respective risk-based approaches. Taking these results into consideration, three deficiencies can be highlighted: a lack of up skilling developers, a high ratio of false positive findings in security code scanners and an erroneous planning of security corrections. In this paper, we present how using the Eclipse platform and the JDT compiler, a proper tooling can be provided to overcome these deficiencies. We present a static analyzer that assists developers to report these security vulnerabilities. We show as well how we integrate an Aspect Oriented tool for semi-automated correction of these findings. Both tools are designed within an architecture that is monitored by security experts and particularly adequate for agile development.","tags":[],"title":"Security vulnerabilities detection and protection using Eclipse","type":"publication"}]